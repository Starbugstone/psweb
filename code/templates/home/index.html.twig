{% extends 'base.html.twig' %}

{% block title %}PZ Server Stats{% endblock %}

{% block javascripts %}
    <script src="https://js.pusher.com/8.2.0/pusher.min.js" defer></script>
    <script src="js/countdown.js" defer></script>
    <script src="js/cookie-pusher.js" defer></script>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-md">
            <p id="cookieCountdown" data-nextdate="{{ nextCookieJarAvailable }}"></p>

            <img src="img/cookie.jpg" class="img-fluid panel-image">
            <form action="{{ path('app_cookie_jar_claim') }}" method="post">
                <input type="text" name="steam_user" value="{{ steam_user }}" placeholder="Steam Name" class="w-100 mt-2" required/>
                <button type="submit" class="btn btn-primary w-100 mt-1">get a cookie</button>
            </form>

            <table class="table table-striped mt-4" id="cookie-jar-winners">
                <thead>
                <tr>
                    <th>last winners</th>
                    <th>items won</th>
                </tr>
                </thead>
                <tbody id="cookie-jar-winners-body">
                {% for cookieJar in cookieJars %}
                    <tr>
                        <td>{{ cookieJar.lastCookieWinner }}</td>
                        <td>{{ cookieJar.lastCookieItem }}</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>

        </div>
        <div class="col-md">

        </div>
    </div>

{% endblock %}

{% block sidebar %}
    <h1 id="player-count">Number of players : {{ playerCount }}</h1>
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Player Name</th>
        </tr>
        </thead>
        <tbody id="player-table-body">
        {% for player in players %}
            <tr>
                <td>{{ player }}</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    {# Generate CSRF token #}
    {% set csrf_token = csrf_token('fetch_players') %}

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function updatePlayerData() {
                fetch('{{ path('api_players') }}', {
                    method: 'GET',
                    headers: {
                        'X-CSRF-TOKEN': '{{ csrf_token }}'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        // Update the player count
                        document.getElementById('player-count').innerText = 'Number of players : ' + data.playerCount;

                        // Update the player table
                        const playerTable = document.getElementById('player-table-body');
                        // Clear existing rows
                        playerTable.querySelectorAll('tr').forEach(row => row.remove());

                        // Add new rows
                        data.players.forEach(player => {
                            const row = document.createElement('tr');
                            const cell = document.createElement('td');
                            cell.innerText = player;
                            row.appendChild(cell);
                            playerTable.appendChild(row);
                        });
                    })
                    .catch(error => console.error('Error fetching player data:', error));
            }

            // Update player data every minute
            setInterval(updatePlayerData, 60000);

            // Initial data load
            updatePlayerData();
        });
    </script>
{% endblock %}
